<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!--Used to solve 'No suitable driver' error withLocalEntityManagerFactoryBean-->
    <bean id="jdbcDriverClassEnsureLoaded" class="${database.jdbc.driver}"/>

    <bean id="serviceEntityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean"
          depends-on="jdbcDriverClassEnsureLoaded">
        <property name="persistenceUnitName" value="catalog-${database.migration.schema}"/>
        <property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence"/>
        <property name="jpaPropertyMap">
            <map>
                <entry key="javax.persistence.jdbc.url" value="${database.jdbc.url}"/>
                <entry key="javax.persistence.jdbc.password" value="${database.jdbc.password}"/>
                <entry key="javax.persistence.jdbc.user" value="${database.jdbc.user}"/>
                <entry key="javax.persistence.jdbc.driver" value="${database.jdbc.driver}"/>

                <entry key="hibernate.dialect"
                       value="${database.hibernate.dialect}"/>
                <entry key="hibernate.hbm2ddl.auto" value="${database.hibernate.hbm2ddl.auto}"/>
                <!--Disabling auto detection-->
                <entry key="hibernate.archive.autodetection" value=""/>
                <!-- Configure connection pool. -->
                <entry key="hibernate.c3p0.min_size" value="${database.c3p0.min_size}"/>
                <entry key="hibernate.c3p0.max_size" value="${database.c3p0.max_size}"/>
                <entry key="hibernate.c3p0.timeout" value="10000"/>
                <entry key="hibernate.c3p0.idle_test_period" value="4000"/>
                <entry key="hibernate.c3p0.max_statements" value="500"/>

                <entry key="hibernate.cache.region.factory_class"
                       value="org.hibernate.cache.internal.NoCachingRegionFactory"/>
                <!--We can cache the exact results of a query by setting the hibernate.cache.use_query_cache property-->
                <!--Then, we can use the query.setHint("org.hibernate.cacheable", true) method on any query we wish to cache.-->
                <entry key="hibernate.cache.use_query_cache" value="false"/>

                <entry key="hibernate.show_sql" value="false"/>
                <entry key="hibernate.format_sql" value="false"/>
                <entry key="hibernate.use_sql_comments" value="false"/>
            </map>
        </property>
    </bean>

    <bean id="transactionManagerJpa" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="serviceEntityManagerFactory"/>
        <qualifier value="defaultTransactionManager"/>
    </bean>
    <!--It's better to use interface proxy, so using proxy-target-class="false"-->
    <tx:annotation-driven transaction-manager="transactionManagerJpa" proxy-target-class="false"/>

</beans>
